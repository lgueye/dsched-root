version: '3.4'

services:
  dsched-clock-server:
    image: dsched-clock-server
    container_name: dsched-clock-server
    build:
      context: ../dsched-clock/dsched-clock-server
    ports:
      - "8000:8080"
    healthcheck:
      test: curl --fail http://dsched-clock-server:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-broker-server:
    image: dsched-broker-server
    container_name: dsched-broker-server
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
    build:
      context: ../dsched-broker/dsched-broker-server
    ports:
      - "61616:61616"
    healthcheck:
      test: curl --fail http://dsched-broker-server:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-notification-server:
    image: dsched-notification-server
    container_name: dsched-notification-server
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
    build:
      context: ../dsched-notification/dsched-notification-server
    depends_on:
      dsched-broker-server:
        condition: service_healthy
    ports:
      - "9080:8080"
    healthcheck:
      test: curl --fail http://dsched-notification-server:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-grid-server-01:
    image: hazelcast/hazelcast:5.1.3
    container_name: dsched-grid-server-01
    environment:
      - HZ_CLUSTERNAME=e2e
    ports:
      - "5701:5701"
    healthcheck:
      test: curl -f http://localhost:5701/hazelcast/health/node-state || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-grid-server-02:
    image: hazelcast/hazelcast:5.1.3
    container_name: dsched-grid-server-02
    environment:
      - HZ_CLUSTERNAME=e2e
    ports:
      - "5702:5701"
    healthcheck:
      test: curl -f http://localhost:5701/hazelcast/health/node-state || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-scheduler-producer-server-01:
    image: dsched-scheduler-producer-server
    container_name: dsched-scheduler-producer-server-01
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
      - SPRING_PROFILES_ACTIVE=e2e
      - CLOCK_SERVER_URL=http://dsched-clock-server:8080
    build:
      context: ../dsched-scheduler/dsched-scheduler-producer/dsched-scheduler-producer-server
    depends_on:
      dsched-broker-server:
        condition: service_healthy
    ports:
      - "9180:8080"
      - "9100:8000"
    healthcheck:
      test: curl --fail http://dsched-scheduler-producer-server-01:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-scheduler-producer-server-02:
    image: dsched-scheduler-producer-server
    container_name: dsched-scheduler-producer-server-02
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
      - SPRING_PROFILES_ACTIVE=e2e
      - CLOCK_SERVER_URL=http://dsched-clock-server:8080
    build:
      context: ../dsched-scheduler/dsched-scheduler-producer/dsched-scheduler-producer-server
    depends_on:
      dsched-broker-server:
        condition: service_healthy
    ports:
      - "9280:8080"
      - "9200:8000"
    healthcheck:
      test: curl --fail http://dsched-scheduler-producer-server-02:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  reverse-proxy:
    image: reverse-proxy
    container_name: reverse-proxy
    build:
      context: ../dsched-scheduler/dsched-scheduler-e2e/src/test/resources/nginx
    depends_on:
      dsched-scheduler-producer-server-01:
        condition: service_healthy
      dsched-scheduler-producer-server-02:
        condition: service_healthy
    ports:
      - "7000:80"
    healthcheck:
      test: curl --fail http://reverse-proxy/actuator/health || exit 1
      interval: 1s
      retries: 30
      start_period: 5s
      timeout: 120s

  dsched-scheduler-consumer-server-01:
    image: dsched-scheduler-consumer-server
    container_name: dsched-scheduler-consumer-server-01
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
      - spring.hazelcast.config=file:///opt/hazelcast/hazelcast-client.yaml
      - SPRING_PROFILES_ACTIVE=e2e
      - CLOCK_SERVER_URL=http://dsched-clock-server:8080
      - node=dsched-scheduler-consumer-server-01
    volumes:
      - $PWD/dsched-scheduler/dsched-scheduler-e2e/src/test/resources/hazelcast-client.yaml:/opt/hazelcast/hazelcast-client.yaml
    build:
      context: ../dsched-scheduler/dsched-scheduler-consumer/dsched-scheduler-consumer-server
    depends_on:
      dsched-clock-server:
        condition: service_healthy
      dsched-notification-server:
        condition: service_healthy
    ports:
      - "9380:8080"
      - "9300:8000"
    healthcheck:
      test: curl --fail http://dsched-scheduler-consumer-server-01:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-scheduler-consumer-server-02:
    image: dsched-scheduler-consumer-server
    container_name: dsched-scheduler-consumer-server-02
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
      - spring.hazelcast.config=file:///opt/hazelcast/hazelcast-client.yaml
      - SPRING_PROFILES_ACTIVE=e2e
      - CLOCK_SERVER_URL=http://dsched-clock-server:8080
      - node=dsched-scheduler-consumer-server-02
    volumes:
      - $PWD/dsched-scheduler/dsched-scheduler-e2e/src/test/resources/hazelcast-client.yaml:/opt/hazelcast/hazelcast-client.yaml
    build:
      context: ../dsched-scheduler/dsched-scheduler-consumer/dsched-scheduler-consumer-server
    depends_on:
      dsched-clock-server:
        condition: service_healthy
      dsched-notification-server:
        condition: service_healthy
    ports:
      - "9480:8080"
      - "9400:8000"
    healthcheck:
      test: curl --fail http://dsched-scheduler-consumer-server-02:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  dsched-scheduler-consumer-server-03:
    image: dsched-scheduler-consumer-server
    container_name: dsched-scheduler-consumer-server-03
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://dsched-broker-server:61616
      - spring.hazelcast.config=file:///opt/hazelcast/hazelcast-client.yaml
      - SPRING_PROFILES_ACTIVE=e2e
      - CLOCK_SERVER_URL=http://dsched-clock-server:8080
      - node=dsched-scheduler-consumer-server-03
    volumes:
      - $PWD/dsched-scheduler/dsched-scheduler-e2e/src/test/resources/hazelcast-client.yaml:/opt/hazelcast/hazelcast-client.yaml
    build:
      context: ../dsched-scheduler/dsched-scheduler-consumer/dsched-scheduler-consumer-server
    depends_on:
      dsched-clock-server:
        condition: service_healthy
      dsched-notification-server:
        condition: service_healthy
    ports:
      - "9580:8080"
      - "9500:8000"
    healthcheck:
      test: curl --fail http://dsched-scheduler-consumer-server-03:8080/actuator/health || exit 1
      interval: 1s
      retries: 20
      start_period: 5s
      timeout: 120s

  notifications-ui:
    image: notifications-ui
    container_name: notifications-ui
    build:
      context: frontend
    depends_on:
      dsched-notification-server:
        condition: service_healthy
    ports:
      - "5000:80"
    healthcheck:
      test: curl --fail http://notifications-ui || exit 1
      interval: 1s
      retries: 30
      start_period: 5s
      timeout: 120s

  # observability (metrics, logging, tracing) collector
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:0.92.0
    command:
      - --config=/etc/otel-collector/otel-collector.yml
    volumes:
      - $PWD/dsched-demo/src/test/resources/docker/otel-collector.yml:/etc/otel-collector/otel-collector.yml
    restart: always
    ports:
      - "4317"      # OTLP gRPC receiver
      - "4318:4318" # OTLP over HTTP receiver
      - "9464"      # Prometheus exporter
    depends_on:
      - loki

  # logging backend
  loki:
    container_name: loki
    image: grafana/loki:2.8.7
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"

  # metrics backend
  prometheus:
    container_name: prometheus
    image: quay.io/prometheus/prometheus:v2.49.1
    volumes:
      - $PWD/dsched-demo/src/test/resources/docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - otel-collector

  # tracing backend
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.53
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"   # Jaeger UI
      - "4317"          # OTLP gRPC default port
      - "4318"          # OTLP HTTP default port (protobuf)
      - "14250"

  # monitoring UI
  grafana:
    container_name: grafana
    image: grafana/grafana:10.2.3
    volumes:
      - $PWD/dsched-demo/src/test/resources/docker/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - jaeger
